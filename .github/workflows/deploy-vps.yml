name: Deploy VPS
on:
  push:
    branches:
      - "feat/vps-docker-deploy"
env:
  COMMIT_HASH: ${{ github.sha }}
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_IMAGE: cicd-frontend
  DOCKER_REGISTRY: docker.io
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: "actions/checkout@v4"

      - uses: "actions/setup-node@v4"
        with:
          node-version: "23.x"

      - name: Format BRANCH_NAME
        run: |
          echo "Before format: $BRANCH_NAME"
          FORMAT="${BRANCH_NAME//\//-}"
          echo "After sanitize: $FORMAT"
          echo "DOCKER_BASE_TAG=$FORMAT" >> $GITHUB_ENV

      - name: Pull cache image
        run: docker pull ${DOCKER_REGISTRY}/${DOCKER_USERNAME}/${DOCKER_IMAGE}:${DOCKER_BASE_TAG} || true

      - name: Build docker image
        run: |
          docker build \
          --cache-from=${DOCKER_USERNAME}/${DOCKER_IMAGE}:${DOCKER_BASE_TAG} \
          -t ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH} \
          .

      - name: Login to Docker Hub
        run: echo "${DOCKER_ACCESS_TOKEN}" | docker login ${DOCKER_REGISTRY} -u ${DOCKER_USERNAME} --password-stdin

      - name: Push image to Docker Hub
        run: |
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH} ${DOCKER_REGISTRY}/${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH}
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH}

      - name: Push cache image to Docker Hub
        run: |
          docker tag ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH} ${DOCKER_REGISTRY}/${DOCKER_USERNAME}/${DOCKER_IMAGE}:${DOCKER_BASE_TAG}
          docker push ${DOCKER_USERNAME}/${DOCKER_IMAGE}:${DOCKER_BASE_TAG}
          docker logout

      - name: Login to GCP Compute Engine
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_IP: ${{ secrets.SSH_IP }}
        run: |
          sudo apt-get update
          which ssh-agent || ( sudo apt-get install -y openssh-client )
          eval $(ssh-agent -s)
          echo "${SSH_KEY}" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          ssh-keyscan -H ${SSH_IP} >> ~/.ssh/known_hosts
          ssh ${SSH_USER}@${SSH_IP} << EOF
            echo "${DOCKER_ACCESS_TOKEN}" | docker login -u ${DOCKER_USERNAME} --password-stdin
            docker pull ${DOCKER_REGISTRY}/${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH}
            docker stop ${DOCKER_IMAGE} || true
            docker rm ${DOCKER_IMAGE} || true
            docker run -d --name ${DOCKER_IMAGE} -p 443:80 ${DOCKER_REGISTRY}/${DOCKER_USERNAME}/${DOCKER_IMAGE}:${COMMIT_HASH}
            docker logout
          EOF
